@page "/widget"
@using Microsoft.AspNetCore.Components.Web


@inherits SystemBlockWidgetBase

@namespace Plugin_710.DiagramComponents
@rendermode @(new InteractiveServerRenderMode(false))


<RadzenStack Style="@OuterStyle()" Gap="0">
    <RadzenStack Orientation="Orientation.Horizontal" Style="border: 1px solid black" Gap="4">
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.ExtraSmall"
            Text="Vertical" Click="@DoVertical" />
        <RadzenButton style="padding-left: 10px;" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"
            Size="ButtonSize.ExtraSmall" Text="Horizontal" Click="@DoHorizontal" />
    </RadzenStack>

    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween"
        Style="border: 1px solid black">
        <RadzenStack Orientation="Orientation.Horizontal">
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
                Style="width: 40px; font-size: 8pt;border-right: 1px solid black">
                @Quantity
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
                Style="width: 40px; font-size: 8pt;border-right: 1px solid black">
                @SerializedAssembly
            </RadzenStack>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
            Style="width: 60px; font-size: 8pt;border-left: 1px solid black">
            @ReferenceDesignator
        </RadzenStack>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
        Style="border: 1px solid black;font-size: 8pt;">
        <div>
            @Name
        </div>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
        Style="border: 1px solid black;font-size: 8pt;">
        <div>
            @Description
        </div>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween"
        Style="border: 1px solid black">
        <div>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
                Style="width: 40px; font-size: 8pt;border-right: 1px solid black">
                @LruSru
            </RadzenStack>
        </div>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Style="font-size: 8pt">
            @PartNumber
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
            style="width: 40px; font-size: 8pt;border-left: 1px solid black">
            @MakeBuy
        </RadzenStack>
    </RadzenStack>
</RadzenStack>

<br />
<br />
<br />
<br />
<br />

<div class="blockwidget" style="@BlockStyle()">
    <div>
        @if (IsRoot())
        {
            <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small" Text="Vertical"
                Click="@DoVertical" />
            <RadzenButton style="padding-left: 10px;" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"
                Size="ButtonSize.Small" Text="Horizontal" Click="@DoHorizontal" />
        }
        @* <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small" Text="Make Root" Click="@GoToRoot" /> 
            @if(HasParent())
            {
                <RadzenButton style="padding-left: 10px;" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Small" Text="Parent" Click="@GoToParent" /> 
            } *@
        @if (HasChildren())
        {
            <RadzenButton style="padding-left: 10px;" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat"
                Size="ButtonSize.Small" Text="Children" Click="@ToggleChildren" />
        }
    </div>

    <div style="margin-left: 20px;">
        @GetTitle()
    </div>

    @foreach (var link in GetHyperlinks())
    {
        <span>@link.tag: (</span>
        <a href="@link.url" target="_blank">@link.name</a>
        <span>)</span> <br />
    }
    <br />
    @* <GroupNodes Group="Group" /> *@

    @* @foreach (var port in Ports())
        {
            // In case you have any ports to show
            // IMPORTANT: You are always in charge of rendering ports
            <CustomPortRenderer @key="port" Port="port" />
        } *@


</div>




<style>
    .blockwidget {
        width: 300px;
        height: 150px;
        background-color: pink;
        border: 2px dashed black;
    }

    .blockwidget .title {
        position: absolute;
        right: 0;
        padding: 8px;
        text-align: right;
        border-left: 2px dashed black;
        border-bottom: 2px dashed black;
    }

    ::deep .diagram-port {
        position: absolute;
        width: 30px;
        height: 20px;
        background-color: black;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    ::deep .diagram-port.top {
        border-top-left-radius: 50%;
        border-top-right-radius: 50%;
        top: -10px;
    }

    ::deep .diagram-port.bottom {
        border-bottom-left-radius: 50%;
        border-bottom-right-radius: 50%;
        bottom: -30px;
    }
</style>
